server {
    server_name neearby.pro www.neearby.pro;

    client_max_body_size 100M;

    location / {
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://localhost:8080;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby_pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby_pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

# Сервер для динамических поддоменов *.neearby.pro
server {
    server_name *.neearby.pro;

    client_max_body_size 100M;

    location / {
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://localhost:8080;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby.pro-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby.pro-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    listen 80;
    server_name *.neearby.pro;

    return 301 https://$host$request_uri;
}

# Сервер для поддомена webinar.neearby.pro
server {
    server_name webinar.neearby.pro;

    client_max_body_size 100M;

    location ^~ /api/v1/ {
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 600s; # Increase to a value suitable for your encoding duration
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;

        rewrite ^/api/v1/(.*)$ /$1 break;
        proxy_pass http://localhost:5001;
    }

    location ^~ /ws/v1 {
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        rewrite ^/ws/v1/(.*)$ /$1 break;
        proxy_pass http://localhost:9000;
    }

    location /storage/ {
        alias /var/www/html/webinar-backend/storage/;
        add_header Cache-control "public";
        access_log off;
        expires 90d;
        autoindex on;
        autoindex_exact_size off;
    }

    location / {
        proxy_pass http://localhost:5002;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarder-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    add_header Cache-Control no-cache;
    add_header Access-Control-Allow-Origin *;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby_pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby_pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Сервер для поддомена hls.neearby.pro
server {
    server_name hls.neearby.pro;

    client_max_body_size 100M;

    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers 'HIGH:!aNULL:!MD5:!3DES';
    # ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
        types {
              application/vnd.apple.mpegurl m3u8;
              video/mp2t ts;
        }

        root /tmp/hls;  # HLS path
        autoindex on;  # Optional, to help debug by listing directory contents
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hls.neearby.pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hls.neearby.pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


# Сервер для поддомена service-author.neearby.pro
server {
    server_name service-author.neearby.pro;

    client_max_body_size 100M;

    location / {
        proxy_pass http://localhost:3003;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarder-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby_pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby_pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Сервер для поддомена service-storage.neearby.pro
server {
    server_name service-storage.neearby.pro;

    client_max_body_size 100M;

    location / {
        proxy_pass http://localhost:3002;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarder-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby_pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby_pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Сервер для поддомена service-mail.neearby.pro
server {
    server_name service-mail.neearby.pro;

    client_max_body_size 100M;

    location / {
        proxy_pass http://localhost:3001;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarder-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby_pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby_pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Сервер для поддомена service-user.neearby.pro
server {
    server_name service-user.neearby.pro;

    client_max_body_size 100M;

    location / {
        proxy_pass http://localhost:3000;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarder-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/neearby_pro/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/neearby_pro/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = www.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name neearby.pro www.neearby.pro;
    return 404; # managed by Certbot

}

server {
    if ($host = webinar.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name webinar.neearby.pro;
    return 404; # managed by Certbot


}
server {
    if ($host = hls.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name hls.neearby.pro;
    return 404; # managed by Certbot


}
server {
    if ($host = service-user.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name service-user.neearby.pro;
    return 404; # managed by Certbot


}
server {
    if ($host = service-mail.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name service-mail.neearby.pro;
    return 404; # managed by Certbot


}
server {
    if ($host = service-storage.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name service-storage.neearby.pro;
    return 404; # managed by Certbot


}
server {
    if ($host = service-author.neearby.pro) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name service-author.neearby.pro;
    return 404; # managed by Certbot

}
